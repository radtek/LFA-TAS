2021-08-19 10:10:09.3034 TAS.Web.Controllers.TempBulkUploadController SaveBulkUpload: exception: could not resolve property: UniqueRef of: TAS.Services.Entities.Policy [.Select[<>f__AnonymousType1`2[[TAS.Services.Entities.TempBulkUpload, TAS.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TAS.Services.Entities.Policy, TAS.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]],<>f__AnonymousType138`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]](.OrderByDescending[<>f__AnonymousType1`2[[TAS.Services.Entities.TempBulkUpload, TAS.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TAS.Services.Entities.Policy, TAS.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]],System.Int32](.Join[TAS.Services.Entities.TempBulkUpload,TAS.Services.Entities.Policy,System.String,<>f__AnonymousType1`2[[TAS.Services.Entities.TempBulkUpload, TAS.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TAS.Services.Entities.Policy, TAS.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]](.Where[TAS.Services.Entities.TempBulkUpload](NHibernate.Linq.NhQueryable`1[TAS.Services.Entities.TempBulkUpload], Quote((a, ) => (AndAlso(Guid.op_Equality(a.TempBulkHeaderId, p1), Equal(a.IsUploaded, p2)))), ), NHibernate.Linq.NhQueryable`1[TAS.Services.Entities.Policy], Quote((b, ) => (b.PolicyNo)), Quote((c, ) => (c.PolicyNo)), Quote((b, c, ) => (new <>f__AnonymousType1`2(b, c, ))), ), Quote((x, ) => (x.c.UniqueRef)), ), Quote((g, ) => (new <>f__AnonymousType138`2(g.b.PolicyNo, g.b.TempBulkHeaderId, ))), )], 
2021-08-19 10:14:05.3293 TAS.Web.Controllers.TempBulkUploadController SaveBulkUpload: exception: could not resolve property: UniqueRef of: TAS.Services.Entities.Policy [.Select[<>f__AnonymousType1`2[[TAS.Services.Entities.TempBulkUpload, TAS.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TAS.Services.Entities.Policy, TAS.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]],<>f__AnonymousType138`3[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]](.Join[TAS.Services.Entities.TempBulkUpload,TAS.Services.Entities.Policy,System.String,<>f__AnonymousType1`2[[TAS.Services.Entities.TempBulkUpload, TAS.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[TAS.Services.Entities.Policy, TAS.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]](.Where[TAS.Services.Entities.TempBulkUpload](NHibernate.Linq.NhQueryable`1[TAS.Services.Entities.TempBulkUpload], Quote((a, ) => (AndAlso(Guid.op_Equality(a.TempBulkHeaderId, p1), Equal(a.IsUploaded, p2)))), ), NHibernate.Linq.NhQueryable`1[TAS.Services.Entities.Policy], Quote((b, ) => (b.PolicyNo)), Quote((c, ) => (c.PolicyNo)), Quote((b, c, ) => (new <>f__AnonymousType1`2(b, c, ))), ), Quote((g, ) => (new <>f__AnonymousType138`3(g.b.PolicyNo, g.b.TempBulkHeaderId, g.c.UniqueRef, ))), )], 
2021-08-19 12:01:33.2933 TAS.Web.Controllers.ClaimController ValidateVinSerialNumber: exception: Object reference not set to an instance of an object., 
2021-08-19 12:02:09.9631 TAS.Web.Controllers.ClaimController PServiceHistoryByPolicyId: exception: Object reference not set to an instance of an object., 
2021-08-19 12:02:17.0001 TAS.Web.Controllers.ClaimController GetAllPartAreasByCommodityCategoryId: exception: Object reference not set to an instance of an object., 
2021-08-19 14:54:40.0290 TAS.Web.Controllers.ClaimController SubmitClaim: exception: Error converting value {null} to type 'System.Decimal'. Path 'claimData.policyDetails.lastServiceMileage'., System.InvalidCastException: Null object cannot be converted to a value type.
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
2021-08-19 14:54:43.9819 TAS.Web.Controllers.ClaimController SubmitClaim: exception: Error converting value {null} to type 'System.Decimal'. Path 'claimData.policyDetails.lastServiceMileage'., System.InvalidCastException: Null object cannot be converted to a value type.
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
2021-08-19 14:54:52.3722 TAS.Web.Controllers.ClaimController SubmitClaim: exception: Error converting value {null} to type 'System.Decimal'. Path 'claimData.policyDetails.lastServiceMileage'., System.InvalidCastException: Null object cannot be converted to a value type.
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
2021-08-19 15:02:50.0042 TAS.Web.Controllers.ClaimController SubmitClaim: exception: Error converting value {null} to type 'System.Decimal'. Path 'claimData.policyDetails.lastServiceMileage'., System.InvalidCastException: Null object cannot be converted to a value type.
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
2021-08-19 15:12:07.6353 TAS.Web.Controllers.ClaimController SubmitClaim: exception: Error converting value {null} to type 'System.DateTime'. Path 'claimData.policyDetails.lastServiceDate'., System.InvalidCastException: Null object cannot be converted to a value type.
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
2021-08-19 15:19:09.5523 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:19:10.1113 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:19:13.0331 TAS.Services.Entities.Management.ClaimEntityManager GetAllOriginalPolicyDetailsByClaimId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:19:33.2334 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:19:33.8367 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:20:04.6610 TAS.Services.Entities.Management.ClaimEntityManager UpdateClaim: exception: Input string was not in a correct format., 
2021-08-19 15:21:57.1430 TAS.Services.Entities.Management.ClaimEntityManager UpdateClaim: exception: Input string was not in a correct format., 
2021-08-19 15:25:40.8427 TAS.Services.Entities.Management.ClaimEntityManager UpdateClaim: exception: Input string was not in a correct format., 
2021-08-19 15:26:37.5324 TAS.Services.Entities.Management.ClaimEntityManager UpdateClaim: exception: Input string was not in a correct format., 
2021-08-19 15:30:06.7400 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:30:07.1341 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:30:09.1548 TAS.Services.Entities.Management.ClaimEntityManager GetAllOriginalPolicyDetailsByClaimId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:30:26.2889 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:30:26.6985 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:31:12.3752 TAS.Services.Entities.Management.ClaimEntityManager UpdateClaim: exception: Input string was not in a correct format., 
2021-08-19 15:35:08.8890 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:35:09.2879 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:35:11.4558 TAS.Services.Entities.Management.ClaimEntityManager GetAllOriginalPolicyDetailsByClaimId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:35:26.5111 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:35:27.2429 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:37:35.7333 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:37:36.1814 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:37:37.8724 TAS.Services.Entities.Management.ClaimEntityManager GetAllOriginalPolicyDetailsByClaimId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:39:07.2728 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:39:08.1502 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:39:10.4722 TAS.Services.Entities.Management.ClaimEntityManager GetAllOriginalPolicyDetailsByClaimId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:40:17.5916 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:40:18.0246 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:40:21.4685 TAS.Services.Entities.Management.ClaimEntityManager GetAllOriginalPolicyDetailsByClaimId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:43:28.1091 TAS.Services.Entities.Management.ClaimEntityManager GetAllOriginalPolicyDetailsByClaimId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:46:27.6227 TAS.Services.Entities.Management.ClaimEntityManager GetAllOriginalPolicyDetailsByClaimId: exception: Object reference not set to an instance of an object., 
2021-08-19 15:50:40.5075 TAS.Services.Entities.Management.ClaimEntityManager GetAllOriginalPolicyDetailsByClaimId: exception: Object reference not set to an instance of an object., 
2021-08-19 16:56:41.3166 TAS.Services.Entities.Management.PolicyEntityManager GetAllPolicyInquiryDetails: exception: could not execute query
[ select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY ]
  Name:p1 - Value:b1409018-ec60-44b2-9afd-d466f8f0979a
[SQL: select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY], System.Data.SqlClient.SqlException (0x80131904): Invalid column name 'EngineNumber'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   at NHibernate.Loader.Loader.GetResultSet(IDbCommand st, Boolean autoDiscoverTypes, Boolean callable, RowSelection selection, ISessionImplementor session)
   at NHibernate.Loader.Loader.DoQuery(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoQueryAndInitializeNonLazyCollections(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoList(ISessionImplementor session, QueryParameters queryParameters, IResultTransformer forcedResultTransformer)
ClientConnectionId:d8c06aa5-28e7-4b4c-9d58-5a5cf047df55
Error Number:207,State:1,Class:16
2021-08-19 16:58:07.5463 TAS.Services.Entities.Management.PolicyEntityManager GetAllPolicyInquiryDetails: exception: could not execute query
[ select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY ]
  Name:p1 - Value:b1409018-ec60-44b2-9afd-d466f8f0979a
[SQL: select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY], System.Data.SqlClient.SqlException (0x80131904): Invalid column name 'EngineNumber'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   at NHibernate.Loader.Loader.GetResultSet(IDbCommand st, Boolean autoDiscoverTypes, Boolean callable, RowSelection selection, ISessionImplementor session)
   at NHibernate.Loader.Loader.DoQuery(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoQueryAndInitializeNonLazyCollections(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoList(ISessionImplementor session, QueryParameters queryParameters, IResultTransformer forcedResultTransformer)
ClientConnectionId:66949c1e-c030-47cf-b602-a1b67e58bad8
Error Number:207,State:1,Class:16
2021-08-19 17:00:18.3034 TAS.Services.Entities.Management.PolicyEntityManager GetAllPolicyInquiryDetails: exception: could not execute query
[ select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY ]
  Name:p1 - Value:b1409018-ec60-44b2-9afd-d466f8f0979a
[SQL: select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY], System.Data.SqlClient.SqlException (0x80131904): Invalid column name 'EngineNumber'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   at NHibernate.Loader.Loader.GetResultSet(IDbCommand st, Boolean autoDiscoverTypes, Boolean callable, RowSelection selection, ISessionImplementor session)
   at NHibernate.Loader.Loader.DoQuery(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoQueryAndInitializeNonLazyCollections(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoList(ISessionImplementor session, QueryParameters queryParameters, IResultTransformer forcedResultTransformer)
ClientConnectionId:0d20c0b1-d3f4-4df1-b36b-fbc6a74a3d80
Error Number:207,State:1,Class:16
2021-08-19 17:01:31.7342 TAS.Services.Entities.Management.PolicyEntityManager GetAllPolicyInquiryDetails: exception: could not execute query
[ select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY ]
  Name:p1 - Value:b1409018-ec60-44b2-9afd-d466f8f0979a
[SQL: select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY], System.Data.SqlClient.SqlException (0x80131904): Invalid column name 'EngineNumber'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   at NHibernate.Loader.Loader.GetResultSet(IDbCommand st, Boolean autoDiscoverTypes, Boolean callable, RowSelection selection, ISessionImplementor session)
   at NHibernate.Loader.Loader.DoQuery(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoQueryAndInitializeNonLazyCollections(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoList(ISessionImplementor session, QueryParameters queryParameters, IResultTransformer forcedResultTransformer)
ClientConnectionId:e15eee32-5b97-4565-a2b9-9027a46d3f9f
Error Number:207,State:1,Class:16
2021-08-19 17:05:49.0898 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:05:49.9958 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:05:52.5091 TAS.Services.Entities.Management.ClaimEntityManager GetAllOriginalPolicyDetailsByClaimId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:05:52.9242 TAS.Services.Entities.Management.ClaimEntityManager GetAllOriginalPolicyDetailsByClaimId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:05:55.3858 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:05:55.9429 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:06:24.2803 TAS.Services.Entities.Management.PolicyEntityManager GetAllPolicyInquiryDetails: exception: could not execute query
[ select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY ]
  Name:p1 - Value:e0280102-376e-448d-a959-a074e4fc8666
[SQL: select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY], System.Data.SqlClient.SqlException (0x80131904): Invalid column name 'EngineNumber'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   at NHibernate.Loader.Loader.GetResultSet(IDbCommand st, Boolean autoDiscoverTypes, Boolean callable, RowSelection selection, ISessionImplementor session)
   at NHibernate.Loader.Loader.DoQuery(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoQueryAndInitializeNonLazyCollections(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoList(ISessionImplementor session, QueryParameters queryParameters, IResultTransformer forcedResultTransformer)
ClientConnectionId:66949c1e-c030-47cf-b602-a1b67e58bad8
Error Number:207,State:1,Class:16
2021-08-19 17:08:22.7377 TAS.Services.Entities.Management.PolicyEntityManager GetAllPolicyInquiryDetails: exception: could not execute query
[ select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY ]
  Name:p1 - Value:e0280102-376e-448d-a959-a074e4fc8666
[SQL: select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY], System.Data.SqlClient.SqlException (0x80131904): Invalid column name 'EngineNumber'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   at NHibernate.Loader.Loader.GetResultSet(IDbCommand st, Boolean autoDiscoverTypes, Boolean callable, RowSelection selection, ISessionImplementor session)
   at NHibernate.Loader.Loader.DoQuery(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoQueryAndInitializeNonLazyCollections(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoList(ISessionImplementor session, QueryParameters queryParameters, IResultTransformer forcedResultTransformer)
ClientConnectionId:1570570f-13d1-4c2f-bd45-cc0067c6a8ad
Error Number:207,State:1,Class:16
2021-08-19 17:09:00.6276 TAS.Services.Entities.Management.PolicyEntityManager GetAllPolicyInquiryDetails: exception: could not execute query
[ select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY ]
  Name:p1 - Value:e0280102-376e-448d-a959-a074e4fc8666
[SQL: select policytran0_.Id as Id1_70_, policytran0_.PolicyId as Polic2_70_, policytran0_.CommodityTypeId as Commo3_70_, policytran0_.ProductId as Produ4_70_, policytran0_.DealerId as Deale5_70_, policytran0_.DealerLocationId as Deale6_70_, policytran0_.ContractId as Contr7_70_, policytran0_.ExtensionTypeId as Exten8_70_, policytran0_.PremiumCurrencyTypeId as Premi9_70_, policytran0_.CoverTypeId as Cove10_70_, policytran0_.SalesPersonId as Sale11_70_, policytran0_.DealerPaymentCurrencyTypeId as Deal12_70_, policytran0_.CustomerPaymentCurrencyTypeId as Cust13_70_, policytran0_.PolicyBundleTransactionId as Poli14_70_, policytran0_.PaymentModeId as Paym15_70_, policytran0_.HrsUsedAtPolicySale as HrsU16_70_, policytran0_.PolicyNo as Poli17_70_, policytran0_.RefNo as RefN18_70_, policytran0_.Comment as Comm19_70_, policytran0_.Premium as Prem20_70_, policytran0_.DealerPayment as Deal21_70_, policytran0_.CustomerPayment as Cust22_70_, policytran0_.IsPreWarrantyCheck as IsPr23_70_, policytran0_.IsSpecialDeal as IsSp24_70_, policytran0_.IsPartialPayment as IsPa25_70_, policytran0_.PolicySoldDate as Poli26_70_, policytran0_.IsApproved as IsAp27_70_, policytran0_.IsRejected as IsRe28_70_, policytran0_.ApprovedRejectedBy as Appr29_70_, policytran0_.CustomerId as Cust30_70_, policytran0_.FirstName as Firs31_70_, policytran0_.LastName as Last32_70_, policytran0_.UserName as User33_70_, policytran0_.Password as Pass34_70_, policytran0_.NationalityId as Nati35_70_, policytran0_.DateOfBirth as Date36_70_, policytran0_.MobileNo as Mobi37_70_, policytran0_.OtherTelNo as Othe38_70_, policytran0_.CustomerTypeId as Cust39_70_, policytran0_.UsageTypeId as Usag40_70_, policytran0_.Gender as Gend41_70_, policytran0_.Address1 as Addr42_70_, policytran0_.Address2 as Addr43_70_, policytran0_.Address3 as Addr44_70_, policytran0_.Address4 as Addr45_70_, policytran0_.IDNo as IDNo46_70_, policytran0_.IDTypeId as IDTy47_70_, policytran0_.DLIssueDate as DLIs48_70_, policytran0_.Email as Emai49_70_, policytran0_.IsActive as IsAc50_70_, policytran0_.BusinessName as Busi51_70_, policytran0_.BusinessAddress1 as Busi52_70_, policytran0_.BusinessAddress2 as Busi53_70_, policytran0_.BusinessAddress3 as Busi54_70_, policytran0_.BusinessAddress4 as Busi55_70_, policytran0_.BusinessTelNo as Busi56_70_, policytran0_.ProfilePicture as Prof57_70_, policytran0_.CountryId as Coun58_70_, policytran0_.CityId as City59_70_, policytran0_.BAndWId as BAnd60_70_, policytran0_.ItemPurchasedDate as Item61_70_, policytran0_.MakeId as Make62_70_, policytran0_.ModelId as Mode63_70_, policytran0_.SerialNo as Seri64_70_, policytran0_.ItemPrice as Item65_70_, policytran0_.CategoryId as Cate66_70_, policytran0_.ModelYear as Mode67_70_, policytran0_.AddnSerialNo as Addn68_70_, policytran0_.ItemStatusId as Item69_70_, policytran0_.InvoiceNo as Invo70_70_, policytran0_.ModelCode as Mode71_70_, policytran0_.DealerPrice as Deal72_70_, policytran0_.VehicleId as Vehi73_70_, policytran0_.VINNo as VINN74_70_, policytran0_.CylinderCountId as Cyli75_70_, policytran0_.BodyTypeId as Body76_70_, policytran0_.PlateNo as Plat77_70_, policytran0_.FuelTypeId as Fuel78_70_, policytran0_.AspirationId as Aspi79_70_, policytran0_.TransmissionId as Tran80_70_, policytran0_.EngineCapacityId as Engi81_70_, policytran0_.DriveTypeId as Driv82_70_, policytran0_.VehiclePrice as Vehi83_70_, policytran0_.Variant as Vari84_70_, policytran0_.IsRecordActive as IsRe85_70_, policytran0_.TransactionTypeId as Tran86_70_, policytran0_.CancelationComment as Canc87_70_, policytran0_.PolicyStartDate as Poli88_70_, policytran0_.PolicyEndDate as Poli89_70_, policytran0_.ModifiedDate as Modi90_70_, policytran0_.ModifiedUser as Modi91_70_, policytran0_.Discount as Disc92_70_, policytran0_.PolicyBundleId as Poli93_70_, policytran0_.DealerPolicy as Deal94_70_, policytran0_.CommodityUsageTypeId as Comm95_70_, policytran0_.RegistrationDate as Regi96_70_, policytran0_.BookletNumber as Book97_70_, policytran0_.ContractInsuaranceLimitationId as Cont98_70_, policytran0_.ContractExtensionsId as Cont99_70_, policytran0_.ContractExtensionPremiumId as Con100_70_, policytran0_.MWStartDate as MWS101_70_, policytran0_.MWIsAvailable as MWI102_70_, policytran0_.EngineNumber as Eng103_70_ from PolicyTransaction policytran0_ where policytran0_.PolicyId=@p0 ORDER BY CURRENT_TIMESTAMP OFFSET 0 ROWS FETCH FIRST 1 ROWS ONLY], System.Data.SqlClient.SqlException (0x80131904): Invalid column name 'EngineNumber'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   at NHibernate.Loader.Loader.GetResultSet(IDbCommand st, Boolean autoDiscoverTypes, Boolean callable, RowSelection selection, ISessionImplementor session)
   at NHibernate.Loader.Loader.DoQuery(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoQueryAndInitializeNonLazyCollections(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies, IResultTransformer forcedResultTransformer)
   at NHibernate.Loader.Loader.DoList(ISessionImplementor session, QueryParameters queryParameters, IResultTransformer forcedResultTransformer)
ClientConnectionId:66949c1e-c030-47cf-b602-a1b67e58bad8
Error Number:207,State:1,Class:16
2021-08-19 17:16:10.6512 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:16:11.0778 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:16:59.7990 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:17:00.3750 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:17:03.3459 TAS.Services.Entities.Management.ClaimEntityManager GetAllOriginalPolicyDetailsByClaimId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:17:16.6814 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:17:17.1090 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:19:59.0545 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:19:59.6248 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:29:11.2185 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:29:11.6214 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:29:50.6617 TAS.Services.Entities.Management.ClaimEntityManager GoodwillAuthorizationByUserId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:30:03.9753 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:30:04.4221 TAS.Services.Entities.Management.CommonEntityManager getUnusedTyreDepthByClaimItemId: exception: Object reference not set to an instance of an object., 
2021-08-19 17:32:32.8985 TAS.Services.Entities.Management.NotificationEntityManager MoveNext: exception: An error occurred while sending the request., System.Net.WebException: The underlying connection was closed: An unexpected error occurred on a send. ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host. ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host
   at System.Net.Sockets.Socket.EndReceive(IAsyncResult asyncResult)
   at System.Net.Sockets.NetworkStream.EndRead(IAsyncResult asyncResult)
   --- End of inner exception stack trace ---
   at System.Net.TlsStream.EndWrite(IAsyncResult asyncResult)
   at System.Net.PooledStream.EndWrite(IAsyncResult asyncResult)
   at System.Net.ConnectStream.WriteHeadersCallback(IAsyncResult ar)
   --- End of inner exception stack trace ---
   at System.Net.HttpWebRequest.EndGetResponse(IAsyncResult asyncResult)
   at System.Net.Http.HttpClientHandler.GetResponseCallback(IAsyncResult ar)
2021-08-19 17:32:35.4776 TAS.Services.Entities.Management.UserEntityManager GetUserById: exception: a different object with the same identifier value was already associated with the session: 97e735f7-8b14-4608-bc8a-97c6e16e6926, of entity: TAS.Services.Entities.UserType, 
2021-08-19 17:32:43.5779 TAS.Services.Entities.Management.ClaimEntityManager GoodwillAuthorizationByUserId: exception: Object reference not set to an instance of an object., 
